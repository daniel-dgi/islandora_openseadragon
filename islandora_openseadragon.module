<?php

/**
 * @file
 *
 * Hooks and callbacks for this module.
 */

/**
 * Implements hook_menu().
 */
function islandora_openseadragon_menu() {
  return array(
    'admin/islandora/openseadragon' => array(
      'title' => 'OpenSeadragon',
      'description' => 'Configuration for the OpenSeadragon viewer.',
      'page callback' => 'drupal_get_form',
      'access arguments' => array('administer site configuration'),
      'page arguments' => array('islandora_openseadragon_admin'),
      'file' => 'includes/admin.form.inc',
      'type' => MENU_NORMAL_ITEM,
    ),
  );
}

/**
 * Implements hook_theme().
 */
function islandora_openseadragon_theme() {
  return array(
    'islandora_openseadragon_viewer' => array(
      'variables' => array(
        'uri' => '',
      ),
      'template' => 'theme/islandora-openseadragon',
    ),
  );
}

/**
 * Implements hook_islandora_viewer_info().
 */
function islandora_openseadragon_islandora_viewer_info() {
  return array(
    'islandora_openseadragon' => array(
      'label' => t('OpenSeadragon'),
        // Later we'll add DZI too.
      'description' => t('OpenSeadragon viewer with Djatoka as tilesource.'),
      'configuration' => 'admin/islandora/openseadragon',
      'callback' => 'islandora_openseadragon_callback',
        // DZI has xml as mimetype? Not sure how to handle that.
      'mimetype' => array('image/jp2'),
    ),
  );
}

/**
 * Callback function for the viewer.
 *
 * @param array
 *   Params required by the theme
 *   Image url be passed to the viewer.
 * @param IslandoraFedoraObject $fedora_object
 *   The object that we are viewing.
 *
 * @return string
 *   HTML repersentation of the OpenSeadragon viewer
 */
function islandora_openseadragon_callback($params = NULL, $fedora_object = NULL) {
  $uri = $params['jp2_url'];
  return theme('islandora_openseadragon_viewer', array('uri' => $uri, 'fedora_object' => $fedora_object));
}

/**
 * Implements hook_preprocess().
 */
function islandora_openseadragon_preprocess_islandora_openseadragon_viewer(&$variables) {
  //fedora_object included in results, but not used
  $library_path = libraries_get_path('openseadragon');
  $module_path = drupal_get_path('module', 'islandora_openseadragon');
  $variables['viewer_id'] = 'islandora-openseadragon';
  $settings = array(
    'id' => $variables['viewer_id'],
    'prefixUrl' => url($library_path),
  );
  $settings = array_merge($settings, islandora_openseadragon_get_settings());
  foreach ($settings as $key => $val) {
    if (filter_var($val, FILTER_VALIDATE_FLOAT)) {
      $settings[$key] = (float) $val;
    }
    elseif (filter_var($val, FILTER_VALIDATE_INT)) {
      $settings[$key] = (int) $val;
    }
  }

  // This is where we jam in some HOCR coordinates.
  if (isset($_GET['terms']) && isset($variables['fedora_object'])) {
    $highlighting_info = islandora_paged_content_get_highlighting_info($variables['fedora_object'], urldecode($_GET['terms']));
    $highlights = $highlighting_info['bounding_boxes'];
  
    foreach ($highlights as $key => $highlight) {
      // The size on the x axis is used to calculate the proportional values
      // under the openseadragon coordinate system.
      $highlights[$key]['x'] = $highlights[$key]['left'] / $highlighting_info['width'];
      $highlights[$key]['y'] = $highlights[$key]['top'] / $highlighting_info['width'];
      $highlights[$key]['width'] = ($highlights[$key]['right'] - $highlights[$key]['left']) / $highlighting_info['width'];
      $highlights[$key]['height'] = ($highlights[$key]['bottom'] - $highlights[$key]['top']) / $highlighting_info['width'];
      unset($highlights[$key]['left']);
      unset($highlights[$key]['top']);
      unset($highlights[$key]['right']);
      unset($highlights[$key]['bottom']);
      $highlights[$key]['className'] = "islandora-openseadragon-highlight";
    }
    $settings['overlays'] = $highlights;
  }
  drupal_add_js(array(
      'islandoraOpenSeadragon' => array(
        'resourceUri' => $variables['uri'],
        'tileSize' => (int) variable_get('islandora_openseadragon_tile_size', '256'),
        'tileOverlap' => (int) variable_get('islandora_openseadragon_tile_overlap', '0'),
        'settings' => $settings,
      ),
    ), 'setting');
  drupal_add_js("$module_path/js/islandora_openseadragon.js");
  drupal_add_js("$library_path/openseadragon.js");
  drupal_add_js("$module_path/js/djtilesource.js");
  drupal_add_css("$module_path/css/islandora_openseadragon.theme.css");
}

/**
 * Get OpenSeadragon settings.
 *
 * @return array
 *   Configuration options for OpenSeadragon.
 */
function islandora_openseadragon_get_settings() {
  return variable_get('islandora_openseadragon_settings', array(
      'debugMode' => FALSE,
      'animationTime' => '1.5',
      'blendTime' => '0.1',
      'alwaysBlend' => FALSE,
      'autoHideControls' => TRUE,
      'immediateRender' => FALSE,
      'wrapHorizontal' => FALSE,
      'wrapVertical' => FALSE,
      'wrapOverlays' => FALSE,
      'panHorizontal' => TRUE,
      'panVertical' => TRUE,
      'minZoomImageRatio' => '0.8',
      'maxZoomPixelRatio' => '2',
      'visibilityRatio' => '0.5',
      'springStiffness' => '5.0',
      'imageLoaderLimit' => '5',
      'clickTimeThreshold' => '300',
      'clickDistThreshold' => '5',
      'zoomPerClick' => '2.0',
      'zoomPerScroll' => '1.2',
      'zoomPerSecond' => '2.0',
    )
  );
}
